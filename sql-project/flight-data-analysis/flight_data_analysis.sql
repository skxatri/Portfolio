-- Flight Data Analysis Project
-- Author: Sachin Khatri
-- Description: SQL queries to analyze airline operations data, including flight performance, aircraft utilization, revenue analysis, and passenger patterns.
    
Use airlines_data;

/* -------------------------------------------------------------------- */
-- Query 1: Average Departure Delay for Delayed Flights
-- Objective: Calculate the average departure delay in minutes for flights that departed later than scheduled.
SELECT flight_id, 
flight_no, 
TIMESTAMPDIFF(MINUTE, scheduled_departure, actual_departure) AS departure_delay_minutes
FROM flights
WHERE actual_departure > scheduled_departure
;

/* -------------------------------------------------------------------- */
-- Query 2: Aircraft Usage Frequency
-- Objective: Count the number of flights operated by each aircraft and compute the average flight duration.
SELECT aircraft_code,
COUNT(*) AS total_flights,
AVG(TIMESTAMPDIFF(MINUTE, scheduled_departure, scheduled_arrival)) AS avg_flight_duration_minutes
FROM flights
GROUP BY aircraft_code
;

/* -------------------------------------------------------------------- */
-- Query 3: Total Revenue per Flight
-- Objective: Calculate total revenue generated by each flight based on ticket sales.
SELECT f.flight_id,
f.flight_no,
SUM(tf.amount) AS total_revenue
FROM ticket_flights tf
JOIN flights f 
	ON tf.flight_id = f.flight_id
GROUP BY f.flight_id, f.flight_no
ORDER BY total_revenue DESC
;
    
/* -------------------------------------------------------------------- */
-- Query 4: Boarding Numbers per Flight
-- Objective: Calculate average boarding number and total boarding passes issued per flight to Detect Patterns in Boarding Pass Allocation.
SELECT flight_id,
ROUND(AVG(boarding_no), 2) AS avg_boarding_no,
COUNT(boarding_no) AS total_boarding_passes
FROM boarding_passes
GROUP BY flight_id
;

/* -------------------------------------------------------------------- */
-- Query 5: Occupancy Rate per Aircraft
-- Objective: Measure the occupancy rate per flight by comparing occupied seats to total available seats, and consider the fare conditions for those seats.
SELECT f.flight_id,
f.flight_no,
f.aircraft_code,
COUNT(bp.ticket_no) AS occupied_seats,
ROUND(COUNT(bp.ticket_no) / (SELECT COUNT(*) FROM seats s WHERE s.aircraft_code = f.aircraft_code) * 100, 2) AS occupancy_rate_percentage
FROM flights f
LEFT JOIN boarding_passes bp 
	ON f.flight_id = bp.flight_id
GROUP BY f.flight_id, f.flight_no, f.aircraft_code
;

/* -------------------------------------------------------------------- */
-- Query 6: Top 3 Flights by Revenue
-- Objective: Identify the three flights with the highest ticket revenue.
SELECT f.flight_id,
f.flight_no,
SUM(tf.amount) AS total_revenue
FROM ticket_flights AS tf
JOIN flights As f
	ON tf.flight_id = f.flight_id
GROUP BY f.flight_id, f.flight_no
ORDER BY total_revenue DESC
Limit 3
;

/* -------------------------------------------------------------------- */
-- Query 7: Average Flight Duration by Aircraft Model
-- Objective: Compute the average flight duration for each aircraft model.
SELECT a.model,
AVG(TIMESTAMPDIFF(MINUTE, f.scheduled_departure, f.scheduled_arrival)) AS avg_duration_minutes
FROM flights f
JOIN aircrafts a 
	ON f.aircraft_code = a.aircraft_code
GROUP BY a.model
;

/* -------------------------------------------------------------------- */
-- Query 8: Departure Flights per Airport
-- Objective: Count how many flights depart from each airport.
SELECT a.airport_code AS departure_airport,
COUNT(f.flight_id) AS departure_flights
FROM airports AS a
LEFT JOIN flights AS f
	ON a.airport_code = f.departure_airport
GROUP BY a.airport_code
ORDER BY departure_flights DESC
;
    
/* -------------------------------------------------------------------- */
-- Query 9: Arrival Flights per Airport
-- Objective: Count how many flights arrive at each airport.
SELECT a.airport_code AS arrival_airport,
COUNT(f.flight_id) AS arrival_flights
FROM airports AS a
LEFT JOIN flights AS f
	ON a.airport_code = f.arrival_airport
GROUP BY a.airport_code
ORDER BY arrival_flights DESC
;
    
/* -------------------------------------------------------------------- */
-- Query 10: Daily Booking Trends
-- Objective: Analyze total bookings and revenue trends over time.
SELECT DATE(book_date) AS booking_date, 
COUNT(book_ref) AS total_bookings, 
SUM(total_amount) AS total_revenue
FROM bookings 
GROUP BY DATE(book_date)
ORDER BY booking_date
;

/* -------------------------------------------------------------------- */
-- Query 11: Frequent Flight Routes
-- Objective: Identify the most common flight routes.
SELECT departure_airport, 
arrival_airport,
COUNT(flight_id) AS flights_count
FROM flights
GROUP BY departure_airport, arrival_airport
ORDER BY flights_count DESC
;

/* -------------------------------------------------------------------- */
-- Query 12: Passengers Boarded per Flight
-- Objective: Count the number of passengers that boarded each flight.
SELECT flight_id,
COUNT(ticket_no) AS passengers_boarded
FROM boarding_passes 
GROUP BY flight_id
;
    
/* -------------------------------------------------------------------- */
-- Query 13: Average Boarding Number
-- Objective: Assess the boarding process using average boarding order.
SELECT flight_id,
ROUND(AVG(boarding_no), 2) AS avg_boarding_no
FROM boarding_passes
GROUP BY flight_id
;
    
/* -------------------------------------------------------------------- */
-- Query 14: Seat Occupancy Rate per Flight
-- Objective: Calculate occupancy percentage per flight based on seats.
SELECT f.flight_id,
f.flight_no,
COUNT(bp.boarding_no) AS occupied_seats,
ROUND((COUNT(bp.boarding_no) * 100.0) / ts.total_seats, 2) AS occupancy_rate_percentage
FROM flights AS f
LEFT JOIN boarding_passes AS bp 
	ON f.flight_id = bp.flight_id
JOIN (	SELECT s.aircraft_code, 
		COUNT(s.seat_no) AS total_seats
		FROM seats AS s
		GROUP BY s.aircraft_code
	) AS ts 
	ON f.aircraft_code = ts.aircraft_code
GROUP BY f.flight_id, f.flight_no, ts.total_seats
ORDER BY f.flight_id
;

/* -------------------------------------------------------------------- */
-- Query 15: Total Spend per Passenger
-- Objective: Aggregate total ticket spend and ticket count per passenger.
SELECT t.passenger_id,
COUNT(t.ticket_no) As total_tickets,
SUM(tf.amount) AS total_spent
FROM tickets AS t 
JOIN ticket_flights AS tf 
	ON t.ticket_no = tf.ticket_no
GROUP BY t.passenger_id
ORDER BY total_spent DESC
;
